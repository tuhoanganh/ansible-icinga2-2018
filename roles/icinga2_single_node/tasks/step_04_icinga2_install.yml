---
# Wrote by Hoang Anh Tu
  - stat: path=/var/tmp/monitoring-plugins-2.2
    register: monitoring_plugins

  - name: INITIAL INSTALLATION - ICINGA2 [STEP 01] - Install Icinga2
    yum: name={{ item.package }}
         state=latest
    with_items: "{{ icinga2_yum }}"

  - name: INITIAL INSTALLATION - ICINGA2 [STEP 02] - Start Icinga2
    service: name=icinga2
             state=started
             enabled=yes

  - name: INITIAL INSTALLATION - MONITORING PLUGINS [STEP 03] - Download and Extract Monitoring Plugins
    command: chdir=/var/tmp/ {{ item }}
    with_items: 
      - wget https://www.monitoring-plugins.org/download/monitoring-plugins-2.2.tar.gz
      - tar -xvf monitoring-plugins-2.2.tar.gz
      - chmod -R 775 monitoring-plugins-2.2
    when: monitoring_plugins.stat.exists == false

  - name: INITIAL INSTALLATION - MONITORING PLUGINS [STEP 04] - Creates Icinga2's Plugin directory
    file: path=/usr/share/icinga2/plugins 
          state=directory

  - name: INITIAL INSTALLATION - MONITORING PLUGINS [STEP 05] - Install Monitoring Plugins
    command: chdir=/var/tmp/monitoring-plugins-2.2 {{ item }}
    with_items:
      - ./configure --with-cgiurl=/thruk/cgi-bin --prefix=/usr/share/icinga2/plugins 
      - make install 
      - make installcheck

  - name: INITIAL INSTALLATION - MONITORING PLUGINS [STEP 06] - Change owner and permission /usr/share/icinga2/plugins
    command: "{{ item }}"
    with_items:
      - chmod 775 /usr/share/icinga2/plugins
      - chown icinga:icinga /usr/share/icinga2/plugins

  - name: INITIAL INSTALLATION - CUSTOM PLUGINS [STEP 07] - Copy SVTECH's custom plugin
    copy: 
      src: "{{ item.src }}" 
      dest: "{{ item.dest }}"
      owner: icinga
      group: icinga
      mode: 0775
    with_items:
      - { src: "{{ role_path }}/files/custom_plugins/dist", dest: "/usr/share/icinga2/plugins/libexec/" }
      - { src: "{{ role_path }}/files/custom_plugins/check_snmp_text_oid_wrapper", dest: "/usr/share/icinga2/plugins/libexec/" }

  - name: INITIAL INSTALLATION - CUSTOM PLUGINS [STEP 08] - Create temp folder
    file: 
      path: /mnt/tmpfs/
      state: directory
      mode: 0777

  - name: INITIAL INSTALLATION - CUSTOM PLUGINS [STEP 09] - Change owner and permission /usr/share/icinga2/plugins
    command: "{{ item }}"
    with_items:
      - chmod 775 /usr/share/icinga2/plugins
      - chown icinga:icinga /usr/share/icinga2/plugins

  - name: INITIAL INSTALLATION - THRUK [Step 10] - Install Thruk Web UI
    yum: 
      name: "{{ item }}" 
      state: latest
    with_items:
      - httpd
      - thruk

  - name: INITIAL INSTALLATION - THRUK [Step 11] - Startup HTTP and Thruk
    service: 
      name: "{{ item }}" 
      state: started
      enabled: yes
    with_items:
      - httpd
      - thruk

  - stat: path=/var/tmp/nagvis-1.9.4
    register: nagvis_temp_path

  - name: INITIAL INSTALLATION - NAGVIS [Step 12] - Download and Extract Nagvis-Map
    command: chdir=/var/tmp/ {{ item }}
    with_items: 
      - wget http://www.nagvis.org/share/nagvis-1.9.4.tar.gz
      - tar -xvf nagvis-1.9.4.tar.gz
      - chmod -R 775 nagvis-1.9.4
    when: 
      - nagvis_temp_path.stat.exists == false

  - stat: path=/var/tmp/pnp4nagios-0.6.26
    register: pnp4nagios_temp_path

  - name: INITIAL INSTALLATION - PNP4NAGIOS [Step 13] - Download and Extract PNP4Nagios
    command: chdir=/var/tmp/ {{ item }}
    with_items: 
      - wget https://downloads.sourceforge.net/project/pnp4nagios/PNP-0.6/pnp4nagios-0.6.26.tar.gz
      - tar -xvf pnp4nagios-0.6.26.tar.gz
      - chmod -R 775 pnp4nagios-0.6.26
    when: 
      - pnp4nagios_temp_path.stat.exists == false

  - name: INITIAL INSTALLATION - PNP4NAGIOS [Step 14] - Install PNP4Nagios
    command: chdir=/var/tmp/pnp4nagios-0.6.26 {{ item }}
    with_items: 
      - ./configure --with-nagios-user=icinga --with-nagios-group=icinga --prefix=/usr/share/pnp4nagios
      - make all
      - make fullinstall
    when: 
      - pnp4nagios_temp_path.stat.exists == false

  - name: INITIAL INSTALLATION - POSTFIX [Step 15] - Install Postfix
    yum: 
      name: postfix
      state: latest

  - name: INITIAL INSTALLATION - POSTFIX [Step 16] - Start Postfix
    service: 
      name: postfix 
      state: started
      enabled: yes

  - name: INITIAL CONFIGURATION - ICINGA2 [Step 17] - Enable Icinga2 Feature
    command: icinga2 feature enable {{ item }}
    with_items:
      - api
      - command
      - compatlog
      - livestatus
      - perfdata
      - statusdata
      - syslog

  - pip:
      name: pexpect

  - name: INITIAL CONFIGURATION - ICINGA2 [Step 18] - Congifure API via the node wizard
    expect:
      command: icinga2 node wizard
      timeout: 300
      responses:
        'mPlease specify if this is a satellite/client setup': 'n'
        'Please specify the common name': ''
        'Bind Host': ''
        'Bind Port': '5665'

  - name: INITIAL CONFIGURATION - ICINGA2 [Step 19] - API setup
    command: icinga2 api setup

  - name: INITIAL CONFIGURATION - ICINGA2 [Step 20] - Configure Icinga2's Constant file
    replace:
      dest: /etc/icinga2/constants.conf
      regexp: '^const PluginDir = "/usr/lib64/nagios/plugins"'
      replace: 'const PluginDir = "/usr/share/icinga2/plugins/libexec"'
      backup: yes

  - name: INITIAL CONFIGURATION - ICINGA2 [Step 21] - Configure Icinga2's Livestatus
    template:
      src: "{{ role_path }}/templates/livestatus.conf.j2"
      dest: "/etc/icinga2/features-enabled/livestatus.conf"
      backup: yes

  - name: INITIAL CONFIGURATION - ICINGA2 [Step 22] - Configure Icinga2's Api User
    template:
      src: "{{ role_path }}/templates/api-users.conf.j2"
      dest: "/etc/icinga2/conf.d/api-users.conf"
      backup: yes

  - name: INITIAL CONFIGURATION - ICINGA2 [Step 23] - Restart Icinga2
    service: 
      name: icinga2 
      state: restarted
      enabled: yes

  - name: INITIAL CONFIGURATION - NAGVIS [Step 24] - Install Nagvis
    expect:
      chdir: /var/tmp/nagvis-1.9.4
      command: ./install.sh
      responses:
        'Do you want to proceed?': 'y'
        'Please enter the path to the nagios base directory': '/etc/icinga2'
        'Please enter the path to NagVis base': '/usr/share/nagvis'
        'Do you want to use backend mklivestatus': 'y'
        'Do you want to use backend ndo2db': 'n'
        'Do you want to use backend ido2db': 'n'
        'Please enter the web path to NagVis': '/nagvis'
        'Please enter the name of the web-server user': 'apache'
        'Please enter the name of the web-server group': 'apache'
        'create Apache config file': 'y'
        'Do you really want to continue': 'y'

  - name: INITIAL CONFIGURATION - THRUK [STEP 25] - Open full permission to Thruk Cache and Library
    command: "{{ item }}"
    with_items:
      - chmod -R 777 /var/cache/thruk
      - chmod -R 777 /var/lib/thruk
      - usermod -a -G icingacmd apache

  - name: INITIAL CONFIGURATION THRUK [Step 26] - Configure Thruk
    template:
      src: "{{ role_path }}/templates/thruk_local.conf.j2"
      dest: "/etc/thruk/thruk_local.conf"
      backup: yes


  - name: INITIAL CONFIGURATION - HTTP [STEP 27] - Start Apache
    service: name=httpd
             state=started
             enabled=yes


  - name: INITIAL CONFIGURATION - THRUK [STEP 28] - Start Thruk
    service: name=thruk
             state=started
             enabled=yes


  - name: INITIAL CONFIGURATION - NAGVIS [STEP 29] - Config Nagvis's virtualhost file
    lineinfile:
      dest: /etc/httpd/conf.d/nagvis.conf
      insertbefore: '# To enable Nagios basic auth on NagVis use the following options'
      line: '{{ item }}'
      state: present
      backup: yes
    with_items:
      - '  AuthName "Thruk Monitoring"'
      - '  AuthType Basic'
      - '  AuthUserFile /etc/thruk/htpasswd'
      - '  Require valid-user'


  - name: INITIAL CONFIGURATION - HTTP [STEP 30] - Restart Apache=
    service: 
      name: "{{ item }}"
      state: restarted
    with_items:
      - httpd
      - icinga2

  - name: INITIAL CONFIGURATION - THRUK [STEP 31] - Restart Thruk=
    service: name=thruk
             state=restarted

  - name: INITIAL CONFIGURATION - THRUK [STEP 32] - Config menu.conf file
    lineinfile:
      dest: /usr/share/thruk/menu.conf
      insertbefore: "add_section('name' => 'Current Status');"
      line: '{{ item }}'
      state: present
      backup: yes
    with_items:
      - "  add_section('name' => 'Nagvis-Map');"
      - "  add_link('name' => \"Nagvis-Map\", 'href' => '/nagvis/frontend/nagvis-js/index.php');"

  - name: INITIAL CONFIGURATION - THRUK [STEP 33] - Restart Thruk
    service: name=thruk
             state=restarted

  - name: INITIAL CONFIGURATION - NAGVIS [STEP 34] - Config nagvis.ini.php file
    template:
      src: "{{ role_path }}/templates/nagvis.ini.php.j2"
      dest: "/usr/share/nagvis/etc/nagvis.ini.php"
      backup: yes

  - name: INITIAL CONFIGURATION - NAGVIS [STEP 35] - Config Nagvis's virtualhost file
    lineinfile:
      dest: /etc/httpd/conf.d/nagvis.conf
      insertafter: 'Allow from all'
      line: '{{ item }}'
      state: present
      backup: yes
    with_items:
      - '  AuthName "Thruk Monitoring"'
      - '  AuthType Basic'
      - '  AuthUserFile /etc/thruk/htpasswd'
      - '  Require valid-user'

  - name: INITIAL CONFIGURATION - PNP4NAGIOS [STEP 36] - Config PNP4Nagios's virtualhost file
    replace:
      dest: /etc/httpd/conf.d/pnp4nagios.conf
      regexp: "{{ item.old }}"
      replace: "{{ item.new }}"
      backup: yes
    with_items:
      - { old: 'AuthName "Nagios Access"', new: 'AuthName "Thruk Monitoring"'}
      - { old: 'AuthUserFile /usr/local/nagios/etc/htpasswd.users', new: 'AuthUserFile /etc/thruk/htpasswd'}

  - name: INITIAL CONFIGURATION - HTTP [STEP 37] - Restart Apache
    service: name=httpd
             state=restarted
    
  - name: INITIAL CONFIGURATION - PNP4NAGIOS [STEP 38] - Remove PNP4Nagios's Test file
    file:
      path: /usr/share/pnp4nagios/share/install.php
      state: absent

  - name: INITIAL CONFIGURATION - PNP4NAGIOS [Step 39] - Configure PNP4Nagios's npcd.cfg file
    replace:
      dest: /usr/share/pnp4nagios/etc/npcd.cfg
      regexp: '^perfdata_spool_dir = /usr/share/pnp4nagios/var/spool'
      replace: 'perfdata_spool_dir = /var/spool/icinga2/perfdata'
      backup: yes

  - name: INITIAL CONFIGURATION - NPCD [STEP 40] - Restart npcd
    service: daemon_reload=yes
             name=npcd
             state=restarted
             enabled=yes

  - name: INITIAL CONFIGURATION - PNP4NAGIOS [STEP 41] - Copy status-header.ssi to Thruk directory
    copy:
      remote_src: True
      src: /var/tmp/pnp4nagios-0.6.26/contrib/ssi/status-header.ssi
      dest: /etc/thruk/ssi/
      owner: apache
      group: apache

  - name: INITIAL CONFIGURATION - THRUK [STEP 42] - Open full permission to Thruk config directory
    file:
      path: /etc/thruk
      state: directory
      owner: apache
      group: apache

  - name: INITIAL CONFIGURATION - ICINGA2 [STEP 43] - Config Icinga2's Template file (add Host, Service)
    blockinfile:
      path: /etc/icinga2/conf.d/templates.conf
      insertbefore: 'template Host "generic-host" {'
      state: present
      backup: yes
      content: |
        template Host "pnp-host" {
          action_url = "/pnp4nagios/graph?host=$host.name$' class='tips' rel='/pnp4nagios/popup?host=$host.name$&srv=_HOST_"
        }
        template Service "pnp-service" {
          action_url = "/pnp4nagios/graph?host=$host.name$&srv=$service.name$' class='tips' rel='/pnp4nagios/popup?host=$host.name$&srv=$service.name$"
        }

  - name: INITIAL CONFIGURATION - ICINGA2 [STEP 44] - Config Icinga2's Template file (import pnp-host)
    lineinfile:
      dest: /etc/icinga2/conf.d/templates.conf
      insertafter: 'template Host "generic-host" {'
      line: '  import "pnp-host"'
      state: present

  - name: INITIAL CONFIGURATION - ICINGA2 [STEP 45] - Config Icinga2's Template file (import pnp-service)
    lineinfile:
      dest: /etc/icinga2/conf.d/templates.conf
      insertafter: 'template Service "generic-service" {'
      line: '  import "pnp-service"'
      state: present

  - name: INITIAL CONFIGURATION - ICINGA2 [STEP 46] - Config Icinga2's service.conf file (disable HTTP check)
    copy: 
      src: "{{ role_path }}/files/icinga2_config/services.conf"
      dest: /etc/icinga2/conf.d/services.conf
      owner: icinga
      group: icinga
      mode: 0775

  - name: INITIAL CONFIGURATION - ICINGA2 [STEP 47] - Restart icinga2
    service: name=icinga2
             state=restarted

  - name: INITIAL CONFIGURATION - PNP4NAGIOS [STEP 48] - Open full permission to PNP4Nagios directory
    file:
      path: /usr/share/pnp4nagios/var/perfdata
      state: directory
      mode: 0777
