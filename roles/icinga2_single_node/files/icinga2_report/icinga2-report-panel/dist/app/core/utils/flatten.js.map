{"version":3,"sources":["../../../../../../icinga2-report-panel/app/core/utils/flatten.ts"],"names":["flatten","target","opts","delimiter","maxDepth","currentDepth","output","step","object","prev","Object","keys","forEach","key","value","isarray","safe","Array","isArray","type","prototype","toString","call","isobject","newKey","length"],"mappings":";;;AAGe,WAASA,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAAoC;AACjDA,WAAOA,QAAQ,EAAf;AAEA,QAAIC,YAAYD,KAAKC,SAAL,IAAkB,GAAlC;AACA,QAAIC,WAAWF,KAAKE,QAAL,IAAiB,CAAhC;AACA,QAAIC,eAAe,CAAnB;AACA,QAAIC,SAAS,EAAb;;AAEA,aAASC,IAAT,CAAcC,MAAd,EAAsBC,IAAtB,EAA4B;AAC1BC,aAAOC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAASC,GAAT,EAAc;AACxC,YAAIC,QAAQN,OAAOK,GAAP,CAAZ;AACA,YAAIE,UAAUb,KAAKc,IAAL,IAAaC,MAAMC,OAAN,CAAcJ,KAAd,CAA3B;AACA,YAAIK,OAAOT,OAAOU,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BR,KAA/B,CAAX;AACA,YAAIS,WAAWJ,SAAS,iBAAxB;AAEA,YAAIK,SAASf,OAAOA,OAAON,SAAP,GAAmBU,GAA1B,GAAgCA,GAA7C;;AAEA,YAAI,CAACX,KAAKE,QAAV,EAAoB;AAClBA,qBAAWC,eAAe,CAA1B;AACD;;AAED,YAAI,CAACU,OAAD,IAAYQ,QAAZ,IAAwBb,OAAOC,IAAP,CAAYG,KAAZ,EAAmBW,MAA3C,IAAqDpB,eAAeD,QAAxE,EAAkF;AAChF,YAAEC,YAAF;AACA,iBAAOE,KAAKO,KAAL,EAAYU,MAAZ,CAAP;AACD;;AAEDlB,eAAOkB,MAAP,IAAiBV,KAAjB;AACD,OAlBD;AAmBD;;AAEDP,SAAKN,MAAL,EAAa,IAAb;AAEA,WAAOK,MAAP;AACD;;qBAjCuBN,O","file":"flatten.js","sourcesContent":["// Copyright (c) 2014, Hugh Kennedy\n// Based on code from https://github.com/hughsk/flat/blob/master/index.js\n//\nexport default function flatten(target, opts): any {\n  opts = opts || {};\n\n  var delimiter = opts.delimiter || '.';\n  var maxDepth = opts.maxDepth || 3;\n  var currentDepth = 1;\n  var output = {};\n\n  function step(object, prev) {\n    Object.keys(object).forEach(function(key) {\n      var value = object[key];\n      var isarray = opts.safe && Array.isArray(value);\n      var type = Object.prototype.toString.call(value);\n      var isobject = type === \"[object Object]\";\n\n      var newKey = prev ? prev + delimiter + key : key;\n\n      if (!opts.maxDepth) {\n        maxDepth = currentDepth + 1;\n      }\n\n      if (!isarray && isobject && Object.keys(value).length && currentDepth < maxDepth) {\n        ++currentDepth;\n        return step(value, newKey);\n      }\n\n      output[newKey] = value;\n    });\n  }\n\n  step(target, null);\n\n  return output;\n}\n"]}