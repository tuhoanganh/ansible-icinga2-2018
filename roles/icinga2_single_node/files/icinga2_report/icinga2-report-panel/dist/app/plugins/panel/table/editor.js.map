{"version":3,"sources":["../../../../../../../icinga2-report-panel/app/plugins/panel/table/editor.ts"],"names":["_","transformers","TablePanelEditorCtrl","$scope","$q","uiSegmentSrv","editor","panelCtrl","ctrl","panel","fontSizes","addColumnSegment","newPlusButton","updateTransformHints","canSetColumns","columnsHelpMessage","transform","dataRaw","when","columns","getColumns","segments","map","c","newSegment","value","text","column","find","push","render","plusButton","html","without","tablePanelEditor","restrict","scope","templateUrl","controller"],"mappings":";;;;;;;AAGOA,O;;AACCC,kB,iBAAAA,Y;;;;;;;;;;;;;;;;;;;;;;;;;UAEKC,oB;AAUX;AACA,sCAAYC,MAAZ,EAA4BC,EAA5B,EAAwCC,YAAxC,EAAsD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACpDF,iBAAOG,MAAP,GAAgB,IAAhB;AACA,eAAKC,SAAL,GAAiBJ,OAAOK,IAAxB;AACA,eAAKC,KAAL,GAAa,KAAKF,SAAL,CAAeE,KAA5B;AACA,eAAKR,YAAL,GAAoBA,YAApB;AACA,eAAKS,SAAL,GAAiB,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,MAAvB,EAA+B,MAA/B,EAAuC,MAAvC,EAA+C,MAA/C,EAAuD,MAAvD,EAA+D,MAA/D,EAAuE,MAAvE,EAA+E,MAA/E,EAAuF,MAAvF,CAAjB;AACA,eAAKC,gBAAL,GAAwBN,aAAaO,aAAb,EAAxB;AACA,eAAKC,oBAAL;AACD;;;;iDAEsB;AACrB,iBAAKC,aAAL,GAAqB,KAArB;AACA,iBAAKC,kBAAL,GAA0B,EAA1B;;AAEA,oBAAQ,KAAKN,KAAL,CAAWO,SAAnB;AACE,mBAAK,yBAAL;AAAgC;AAC9B,uBAAKF,aAAL,GAAqB,IAArB;AACA;AACD;;AACD,mBAAK,MAAL;AAAa;AACX,uBAAKA,aAAL,GAAqB,IAArB;AACA;AACD;;AACD,mBAAK,OAAL;AAAc;AACZ,uBAAKC,kBAAL,GAA0B,0DAA1B;AACD;AAXH;AAaD;;;6CAEkB;AACjB,gBAAI,CAAC,KAAKR,SAAL,CAAeU,OAApB,EAA6B;AAC3B,qBAAO,KAAKb,EAAL,CAAQc,IAAR,CAAa,EAAb,CAAP;AACD;;AACD,gBAAIC,UAAU,KAAKlB,YAAL,CAAkB,KAAKQ,KAAL,CAAWO,SAA7B,EAAwCI,UAAxC,CAAmD,KAAKb,SAAL,CAAeU,OAAlE,CAAd;;AACA,gBAAII,WAAWrB,EAAEsB,GAAF,CAAMH,OAAN,EAAgBI,CAAD,IAAY,KAAKlB,YAAL,CAAkBmB,UAAlB,CAA6B;AAACC,qBAAOF,EAAEG;AAAV,aAA7B,CAA3B,CAAf;;AACA,mBAAO,KAAKtB,EAAL,CAAQc,IAAR,CAAaG,QAAb,CAAP;AACD;;;sCAEW;AACV,gBAAIF,UAAUlB,aAAa,KAAKQ,KAAL,CAAWO,SAAxB,EAAmCI,UAAnC,CAA8C,KAAKb,SAAL,CAAeU,OAA7D,CAAd;;AACA,gBAAIU,SAAS3B,EAAE4B,IAAF,CAAOT,OAAP,EAAgB;AAACO,oBAAM,KAAKf,gBAAL,CAAsBc;AAA7B,aAAhB,CAAb;;AAEA,gBAAIE,MAAJ,EAAY;AACV,mBAAKlB,KAAL,CAAWU,OAAX,CAAmBU,IAAnB,CAAwBF,MAAxB;AACA,mBAAKG,MAAL;AACD;;AAED,gBAAIC,aAAa,KAAK1B,YAAL,CAAkBO,aAAlB,EAAjB;AACA,iBAAKD,gBAAL,CAAsBqB,IAAtB,GAA6BD,WAAWC,IAAxC;AACA,iBAAKrB,gBAAL,CAAsBc,KAAtB,GAA8BM,WAAWN,KAAzC;AACD;;;6CAEkB;AACjB,iBAAKhB,KAAL,CAAWU,OAAX,GAAqB,EAArB;;AACA,gBAAI,KAAKV,KAAL,CAAWO,SAAX,KAAyB,yBAA7B,EAAwD;AACtD,mBAAKP,KAAL,CAAWU,OAAX,CAAmBU,IAAnB,CAAwB;AAACH,sBAAM,KAAP;AAAcD,uBAAO;AAArB,eAAxB;AACD;;AAED,iBAAKZ,oBAAL;AACA,iBAAKiB,MAAL;AACD;;;mCAEQ;AACP,iBAAKvB,SAAL,CAAeuB,MAAf;AACD;;;uCAEYH,M,EAAQ;AACnB,iBAAKlB,KAAL,CAAWU,OAAX,GAAqBnB,EAAEiC,OAAF,CAAU,KAAKxB,KAAL,CAAWU,OAArB,EAA8BQ,MAA9B,CAArB;AACA,iBAAKpB,SAAL,CAAeuB,MAAf;AACD;;;;;;;;AAGH;AACO,eAASI,gBAAT,CAA0B9B,EAA1B,EAA8BC,YAA9B,EAA4C;AACjD;;AACA,eAAO;AACL8B,oBAAU,GADL;AAELC,iBAAO,IAFF;AAGLC,uBAAa,4CAHR;AAILC,sBAAYpC;AAJP,SAAP;AAMD","file":"editor.js","sourcesContent":["///<reference path=\"../../../headers/common.d.ts\" />\n\n\nimport _ from 'lodash';\nimport {transformers} from './transformers';\n\nexport class TablePanelEditorCtrl {\n  panel: any;\n  panelCtrl: any;\n  transformers: any;\n  fontSizes: any;\n  addColumnSegment: any;\n  getColumnNames: any;\n  canSetColumns: boolean;\n  columnsHelpMessage: string;\n\n  /** @ngInject */\n  constructor($scope, private $q, private uiSegmentSrv) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n    this.transformers = transformers;\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\n    this.addColumnSegment = uiSegmentSrv.newPlusButton();\n    this.updateTransformHints();\n  }\n\n  updateTransformHints() {\n    this.canSetColumns = false;\n    this.columnsHelpMessage = '';\n\n    switch (this.panel.transform) {\n      case \"timeseries_aggregations\": {\n        this.canSetColumns = true;\n        break;\n      }\n      case \"json\": {\n        this.canSetColumns = true;\n        break;\n      }\n      case \"table\": {\n        this.columnsHelpMessage = \"Columns and their order are determined by the data query\";\n      }\n    }\n  }\n\n  getColumnOptions() {\n    if (!this.panelCtrl.dataRaw) {\n      return this.$q.when([]);\n    }\n    var columns = this.transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    var segments = _.map(columns, (c: any) => this.uiSegmentSrv.newSegment({value: c.text}));\n    return this.$q.when(segments);\n  }\n\n  addColumn() {\n    var columns = transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n    var column = _.find(columns, {text: this.addColumnSegment.value});\n\n    if (column) {\n      this.panel.columns.push(column);\n      this.render();\n    }\n\n    var plusButton = this.uiSegmentSrv.newPlusButton();\n    this.addColumnSegment.html = plusButton.html;\n    this.addColumnSegment.value = plusButton.value;\n  }\n\n  transformChanged() {\n    this.panel.columns = [];\n    if (this.panel.transform === 'timeseries_aggregations') {\n      this.panel.columns.push({text: 'Avg', value: 'avg'});\n    }\n\n    this.updateTransformHints();\n    this.render();\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  removeColumn(column) {\n    this.panel.columns = _.without(this.panel.columns, column);\n    this.panelCtrl.render();\n  }\n}\n\n/** @ngInject */\nexport function tablePanelEditor($q, uiSegmentSrv) {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/table/editor.html',\n    controller: TablePanelEditorCtrl,\n  };\n}\n"]}